diff --git a/.gitignore b/.gitignore
index cb7bdbd..9bbe1b5 100644
--- a/.gitignore
+++ b/.gitignore
@@ -1,5 +1,4 @@
 .dub
-.vs
 docs.json
 __dummy.html
 docs/
diff --git a/dub.sdl b/dub.sdl
index ffa1d9d..a4e366b 100644
--- a/dub.sdl
+++ b/dub.sdl
@@ -4,13 +4,13 @@ authors "Inochi2D Project"
 copyright "Copyright Â© 2021, Inochi2D Project"
 license "BSD 2-clause"
 dependency "tinyfiledialogs" version="~>0.10.1"
-dependency "facetrack-d" version="~>0.7.8"
+dependency "facetrack-d" version="~>0.7.7"
 dependency "i2d-imgui" version="~>0.8.0"
 dependency "inui" version="~>1.2.1"
 dependency "lumars" version="~>1.6.1"
 dependency "bindbc-sdl" version="~>1.1.2"
 dependency "i18n-d" version="~>1.0.2"
-dependency "inochi2d" version="~>0.8.3"
+dependency "inochi2d" version="~>0.8.2"
 targetPath "out/"
 workingDirectory "out/"
 copyFiles "res/licenses/*"
@@ -110,4 +110,4 @@ configuration "win32-nightly" {
 
 	lflags "/SUBSYSTEM:windows" "/ENTRY:mainCRTStartup" platform="window-dmd"
 	sourceFiles "build-aux\\windows\\inochi-session.res"
-}
+}
\ No newline at end of file
diff --git a/source/session/tracking/expr.d b/source/session/tracking/expr.d
index 80522ff..b6cf988 100644
--- a/source/session/tracking/expr.d
+++ b/source/session/tracking/expr.d
@@ -16,7 +16,6 @@ import std.format;
 import i18n;
 import inmath.noise;
 import std.random : uniform;
-import inmath;
 
 private {
     LuaState* state;
@@ -93,7 +92,6 @@ void insInitExpressions() {
     state.register!((float value) { return radians(value); })("radians");
     state.register!((float val) { return osnoise2(val, 0); })("simplex");
     state.register!((float val) { return (1+osnoise2(val, 0))/2.0; })("usimplex");
-    state.register!((float val) { return sign(val); })("sign");
 }
 
 void insCleanupExpressions() {
diff --git a/source/session/tracking/vspace.d b/source/session/tracking/vspace.d
index d39f8d0..396c910 100644
--- a/source/session/tracking/vspace.d
+++ b/source/session/tracking/vspace.d
@@ -265,7 +265,6 @@ public:
                         // NOTE: inochi-session should ALWAYS be the appName.
                         xdata["appName"] = "inochi-session";
                         if (type == "VMC Receiver") xdata["address"] = "0.0.0.0";
-                        if (type == "Phiz OSC Receiver") xdata["address"] = "0.0.0.0";
                         adaptor = ftCreateAdaptor(type);
                         if(adaptor is null) continue;
                         adaptor.setOptions(xdata);
@@ -277,7 +276,6 @@ public:
                         // NOTE: inochi-session should ALWAYS be the appName.
                         xdata["appName"] = "inochi-session";
                         if (type == "VMC Receiver") xdata["address"] = "0.0.0.0";
-                        if (type == "Phiz OSC Receiver") xdata["address"] = "0.0.0.0";
                         adaptor = ftCreateAdaptor(type);
                         if(adaptor is null) continue;
                         adaptor.setOptions(xdata);
diff --git a/source/session/windows/spaceedit.d b/source/session/windows/spaceedit.d
index 7d66839..bf432b9 100644
--- a/source/session/windows/spaceedit.d
+++ b/source/session/windows/spaceedit.d
@@ -101,13 +101,6 @@ private:
                 editingZone.sources[i] = source;
                 refreshOptionsList();
             }
-            if (uiImSelectable("Phiz OSC")) {
-                if (source) source.stop();
-
-                source = new PhizOSCAdaptor();
-                editingZone.sources[i] = source;
-                refreshOptionsList();
-            }
             if (uiImSelectable("OpenSeeFace")) {
                 if (source) source.stop();
 
@@ -122,13 +115,6 @@ private:
                 editingZone.sources[i] = source;
                 refreshOptionsList();
             }
-            if (uiImSelectable("Facemotion3D")) {
-                if (source) source.stop();
-
-                source = new FM3DAdaptor();
-                editingZone.sources[i] = source;
-                refreshOptionsList();
-            }
             version (WebHookAdaptor) {
                 if (uiImSelectable("WebHook Receiver")) {
                     if (source) source.stop();
@@ -138,15 +124,6 @@ private:
                     refreshOptionsList();
                 }
             }
-            version (Phiz) {
-                if (uiImSelectable("Phiz Receiver")) {
-                    if (source) source.stop();
-
-                    source = new PhizAdaptor();
-                    editingZone.sources[i] = source;
-                    refreshOptionsList();
-                }
-            }
             version (JML) {
                 if (uiImSelectable("JINS MEME Logger")) {
                     if (source) source.stop();
